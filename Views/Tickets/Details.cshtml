@model ZergTracker.Models.Ticket

@{
    ViewBag.Title = "Details";
}

<section class="content-header">
    <div class="container-fluid">
        <div class="row mb-2">
            <div class="col-sm-12">
                <ol class="breadcrumb float-sm-right">
                    <li class="breadcrumb-item"><a href="#">Zerg Tracker</a></li>
                    <li class="breadcrumb-item">Issues</li>
                    <li class="breadcrumb-item active">Issue Details</li>
                </ol>
            </div>
        </div>
    </div><!-- /.container-fluid -->
</section>

<!-- Content Wrapper. Contains page content -->
<div class="content-wrapper padded-top">
    <div class="custom-container">

        <div>
            <h4>Ticket</h4>
            <hr />
            <dl class="dl-horizontal">
                <dt>
                    @Html.DisplayNameFor(model => model.AssignedToUser.FirstName)
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.AssignedToUser.FirstName)
                </dd>

                <dt>
                    @Html.DisplayNameFor(model => model.OwnerUser.FirstName)
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.OwnerUser.FirstName)
                </dd>

                <dt>
                    @Html.DisplayNameFor(model => model.TicketPriority.Name)
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.TicketPriority.Name)
                </dd>

                <dt>
                    @Html.DisplayNameFor(model => model.TicketStatus.Name)
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.TicketStatus.Name)
                </dd>

                <dt>
                    @Html.DisplayNameFor(model => model.TicketType.Name)
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.TicketType.Name)
                </dd>

                <dt>
                    @Html.DisplayNameFor(model => model.Title)
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.Title)
                </dd>

                <dt>
                    @Html.DisplayNameFor(model => model.Description)
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.Description)
                </dd>

                <dt>
                    @Html.DisplayNameFor(model => model.Created)
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.Created)
                </dd>

                <dt>
                    @Html.DisplayNameFor(model => model.Updated)
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.Updated)
                </dd>

                <dt>
                    @Html.DisplayNameFor(model => model.ProjectId)
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.ProjectId)
                </dd>

            </dl>
        </div>
        <p>
            @Html.ActionLink("Edit", "Edit", new { id = Model.Id }) |
            @Html.ActionLink("Back to List", "Index")
        </p>

        @if (User.Identity.IsAuthenticated)
        {
            <div class="card card-widget" id="comments">
                <div class="card-header">
                    <div class="user-block">
                        <img class="img-circle" src="~/favicon-32x32.png" alt="Zerg Logo">
                        <span class="username">@Model.Title</span>
                        <span class="description">Issue Creation: @Model.Created.ToString("MMM dd yyyy")</span>
                    </div>
                    <!-- /.user-block -->
                    <div class="card-tools">
                        <button type="button" class="btn btn-tool" data-card-widget="collapse">
                            <i class="fas fa-minus"></i>
                        </button>
                        <button type="button" class="btn btn-tool" data-card-widget="remove">
                            <i class="fas fa-times"></i>
                        </button>
                    </div>
                    <!-- /.card-tools -->
                </div>
                <!-- /.card-header -->
                
                        @foreach (var comment in Model.TicketComments)
                        {
                    <div class="card-body">

                        @if (comment.HasPic)
                        {
                            foreach (var pic in Model.TicketAttachments)
                            {
                                if (comment.Id == pic.CommentId)
                                {
                                    <img class="img-fluid pad" src="@pic.FilePath" alt="Comment Attachment">

                                }
                            }
                        }
                    </div>
                    <!-- /.card-body -->
                    <div class="card-footer card-comments">
                        <div class="card-comment">
                            <!-- User image -->
                            <img class="img-circle img-sm" src="@comment.User.ProfilePic" alt="User Image">

                            <div class="comment-text">
                                <span class="username">
                                    @comment.User.FirstName @comment.User.LastName
                                    <span class="text-muted float-right">@comment.Created.ToString("MM/dd/yyyy h:mm tt")</span>
                                </span><!-- /.username -->
                                @comment.Comment
                            </div>
                            <!-- /.comment-text -->
                        </div>
                        <!-- /.card-comment -->
                    </div>
                    <!-- /.card-footer/comments -->
                    }
                    <div class="card-footer">
                        @using (Html.BeginForm("AddCommentAttachment", "TicketComments", new { TicketId = Model.Id }, FormMethod.Post, new { role = "form", enctype = "Multipart/form-data" }))
                        {
                        @Html.AntiForgeryToken()
                        @Html.Hidden("TicketId", Model.Id)

                            <div class="row">
                                <div class="col-12">
                                    @Html.Action("CommentProfilePic", "Account")
                                    <div class="img-push">                               
                                        @Html.TextArea("Comment", new { @class = "form-control", placeholder = "Leave comment here...", rows = "2" })
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-9"></div>
                                <div class="col-3">
                                    <input name="image" type="file" class="form-control" id="fileUpload" style="display: none;" />
                                    <div class="btn-group padded-top">
                                        <a class="btn btn-primary" onclick="clicker()"><i class="fas fa-image fa-2x" style="color: white; cursor: pointer;"></i></a>
                                        <input type="submit" value="Comment" class="btn btn-primary" /> 
                                    </div>
                                </div>
                            </div>
                        }
                    </div>
                    <!-- /.card-footer -->
                </div>
                <!-- /.card -->
    }
    else
    {
        <h3 class="text-center">Please Login or Register to View or Leave Comments!</h3>
    }

    </div>
</div>

<script>
    function clicker() {
        fileUpload.click();
    }
</script>
